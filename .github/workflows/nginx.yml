name: Deploy to EC2

on:
  push:
    branches: [ nginx-config ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure Nginx (no install)
        uses: appleboy/ssh-action@v1.2.0
        env:
          SERVER_NAME: ${{ secrets.SERVER_NAME }}       
          APP_PORT: ${{ secrets.APP_PORT }}             # host port Nginx should proxy to
          CERTBOT_EMAIL: ${{ secrets.CERTBOT_EMAIL }}   # only if using HTTPS
          SITE_NAME: app
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}             # ubuntu / ec2-user / root
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail
            DOMAIN="${SERVER_NAME:-_}"
            PORT="${APP_PORT:-3000}"
            SITE_NAME="${SITE_NAME:-app}"

            # --- SAFE WRITE ---
            cat > /tmp/${SITE_NAME}.nginx.conf <<CONF
            server {
              listen 80;
              server_name ${DOMAIN};

              location / {
                proxy_pass http://127.0.0.1:${PORT};
                proxy_http_version 1.1;
                proxy_set_header Upgrade \$http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host \$host;
                proxy_set_header X-Real-IP \$remote_addr;
                proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto \$scheme;
              }
            }
            CONF

            sudo mv /tmp/${SITE_NAME}.nginx.conf /etc/nginx/sites-available/${SITE_NAME}
            sudo ln -sf /etc/nginx/sites-available/${SITE_NAME} /etc/nginx/sites-enabled/${SITE_NAME}

            # Remove any accidental bad lines from previous broken configs
            sudo sed -i '/DRONE_SSH_PREV_COMMAND_EXIT_CODE/d' /etc/nginx/sites-available/${SITE_NAME} || true

            sudo nginx -t
            sudo systemctl reload nginx

            # Optional HTTPS (requires certbot already installed)
            if [[ "$DOMAIN" != "_" ]] && [[ -n "${CERTBOT_EMAIL:-}" ]]; then
              sudo certbot --nginx -d "$DOMAIN" --non-interactive --agree-tos -m "$CERTBOT_EMAIL" --redirect || true
            fi
