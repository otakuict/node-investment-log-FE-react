name: Deploy to EC2

on:
  push:
    branches: [nginx-config]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Build / ship your app here (docker pull/run, rsync, etc.)

      - name: Fix APT, install & configure Nginx (idempotent)
        uses: appleboy/ssh-action@v1.2.0
        env:
          SERVER_NAME: ${{ secrets.SERVER_NAME }}       # example.com or "_"
          APP_PORT: ${{ secrets.APP_PORT }}             # e.g., 3001 if 0.0.0.0:3001->3000
          CERTBOT_EMAIL: ${{ secrets.CERTBOT_EMAIL }}   # optional
          SITE_NAME: app
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}             # ubuntu/ec2-user/etc.
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            # (same script as above)
            set -euo pipefail
            export DEBIAN_FRONTEND=noninteractive
            DOMAIN="${SERVER_NAME:-_}"
            PORT="${APP_PORT:-3000}"
            SITE_NAME="${SITE_NAME:-app}"
            sudo apt-get update -y
            sudo dpkg --configure -a || true
            sudo apt-get -y -f install || true
            sudo apt-get -y --fix-broken install || true
            sudo apt-get install -y linux-aws-headers-6.8.0-1029 linux-aws-tools-6.8.0-1029 || true
            sudo apt-get -y --fix-broken install || true
            if ! command -v nginx >/dev/null 2>&1; then
              sudo apt-get install -y nginx
              sudo systemctl enable nginx
            fi
            sudo tee /etc/nginx/sites-available/$SITE_NAME >/dev/null <<CONF
            server {
              listen 80;
              server_name ${DOMAIN};
              location / {
                proxy_pass http://127.0.0.1:${PORT};
                proxy_http_version 1.1;
                proxy_set_header Upgrade \$http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host \$host;
                proxy_set_header X-Real-IP \$remote_addr;
                proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto \$scheme;
              }
            }
            CONF
            sudo ln -sf /etc/nginx/sites-available/$SITE_NAME /etc/nginx/sites-enabled/$SITE_NAME
            sudo nginx -t
            sudo systemctl reload nginx
            if [[ "$DOMAIN" != "_" ]] && [[ -n "${CERTBOT_EMAIL:-}" ]]; then
              if ! command -v certbot >/dev/null 2>&1; then
                sudo apt-get install -y certbot python3-certbot-nginx
              fi
              sudo certbot --nginx -d "$DOMAIN" --non-interactive --agree-tos -m "$CERTBOT_EMAIL" --redirect || true
            fi
            echo "----- ACTIVE NGINX CONFIG ($SITE_NAME) -----"
            sudo cat /etc/nginx/sites-available/$SITE_NAME
